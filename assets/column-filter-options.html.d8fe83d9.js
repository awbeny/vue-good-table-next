import{_ as n,d as s}from"./app.f00b8de7.js";const a={},e=s(`<h1 id="column-filter-options" tabindex="-1"><a class="header-anchor" href="#column-filter-options" aria-hidden="true">#</a> Column Filter Options</h1><h2 id="filteroptions" tabindex="-1"><a class="header-anchor" href="#filteroptions" aria-hidden="true">#</a> filterOptions</h2><p>type <code>Object</code></p><p>A collection of filter specific properties within a column object.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> 
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&#39;user_name&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filterOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
	  <span class="token literal-property property">styleClass</span><span class="token operator">:</span> <span class="token string">&#39;class1&#39;</span><span class="token punctuation">,</span> <span class="token comment">// class to be added to the parent th element</span>
  	  <span class="token literal-property property">enabled</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// enable filter for this column</span>
      <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">&#39;Filter This Thing&#39;</span><span class="token punctuation">,</span> <span class="token comment">// placeholder for filter input</span>
      <span class="token literal-property property">filterValue</span><span class="token operator">:</span> <span class="token string">&#39;Jane&#39;</span><span class="token punctuation">,</span> <span class="token comment">// initial populated value for this filter</span>
      <span class="token literal-property property">filterDropdownItems</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// dropdown (with selected values) instead of text input</span>
      <span class="token literal-property property">filterFn</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>columnFilterFn<span class="token punctuation">,</span> <span class="token comment">//custom filter function that</span>
      <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">&#39;enter&#39;</span><span class="token punctuation">,</span> <span class="token comment">//only trigger on enter not on keyup </span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="styleclass" tabindex="-1"><a class="header-anchor" href="#styleclass" aria-hidden="true">#</a> styleClass</h2><p>type: <code>string</code> Class to be added to the parent th element. You can specify several classes separated by a space.</p><h2 id="enabled" tabindex="-1"><a class="header-anchor" href="#enabled" aria-hidden="true">#</a> enabled</h2><p>type: <code>Boolean</code> Switch to enable column filter.</p><h2 id="placeholder" tabindex="-1"><a class="header-anchor" href="#placeholder" aria-hidden="true">#</a> placeholder</h2><p>type: <code>String</code> Placeholder to use on the column filter input.</p><h2 id="filtervalue" tabindex="-1"><a class="header-anchor" href="#filtervalue" aria-hidden="true">#</a> filterValue</h2><p>type: <code>String</code> If you want filter to be pre-populated, use this property</p><h2 id="trigger" tabindex="-1"><a class="header-anchor" href="#trigger" aria-hidden="true">#</a> trigger</h2><p>type: <code>String (default: &#39;&#39;)</code> Allows specifying trigger for column filter. Default trigger is keyup. use &#39;enter&#39; to filter only when enter key is pressed.</p><h2 id="filterdropdownitems" tabindex="-1"><a class="header-anchor" href="#filterdropdownitems" aria-hidden="true">#</a> filterDropdownItems</h2><p>type <code>Array of strings or Array of objects</code></p><p>allows creating a dropdown for filter as opposed to an input</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//array</span>
<span class="token literal-property property">filterDropdownItems</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;Blue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Yellow&#39;</span><span class="token punctuation">]</span>
<span class="token comment">//or</span>
<span class="token literal-property property">filterDropdownItems</span><span class="token operator">:</span> <span class="token punctuation">[</span>  
  <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;n&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Inactive&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  
  <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Active&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  
  <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Check&#39;</span> <span class="token punctuation">}</span>  
<span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filterfn" tabindex="-1"><a class="header-anchor" href="#filterfn" aria-hidden="true">#</a> filterFn</h2><p>type <code>Function</code></p><p>Custom filter, function of two variables: <code>function(data, filterString)</code>, should return true if data matches the filterString, otherwise false</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function-variable function">filterFn</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> filterString</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>filterString<span class="token punctuation">)</span>
  <span class="token keyword">return</span> data <span class="token operator">&gt;=</span> x <span class="token operator">-</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> data <span class="token operator">&lt;=</span> x <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// would create a filter matching numbers within 5 of the provided value</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23);function t(p,o){return e}var l=n(a,[["render",t],["__file","column-filter-options.html.vue"]]);export{l as default};
